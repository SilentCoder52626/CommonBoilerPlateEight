
@{
    ViewBag.ModuleName = _CommonLocalizer["CelebrityLocation"];
    ViewBag.ModuleIcon = "globe";
}
<div>
    <div class="row">
        <div class="col-md-12 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <div class="row card-title align-middle mb-5">
                        <div class="col-md-9 align-items-center d-flex mt-1">
                            <a href="@Url.Action("Create", "CelebrityLocation")" class="btn btn-primary btn-xs btn-icon-text">
                                <i class="btn-icon-prepend" data-feather="plus"></i>@_CommonLocalizer["Create"]
                            </a>
                        </div>
                        <div class="col-md-3 mt-1">
                         
                                <div class="input-group">
                                    <input type="text" id="Search" class="form-control" placeholder="@_CommonLocalizer["Search"]" aria-describedby="search-addon">
                                    <button type="button" class="input-group-text btn btn-primary" id="filter"><i class="btn-icon-prepend" data-feather="search"></i></button>
                                </div>
                          
                        </div>
                    </div>

                    <hr style="border: 1px dashed #000" />

                    <div class="table-responsive">
                        <table id="celebrityLocationTable" class="table table-hover">
                            <thead class="bg-primary">
                                <tr>
                                    <th></th>
                                    <th class="text-white fw-bold"><i class="link-icon feather-16" data-feather="edit"></i>@_CommonLocalizer["Image"]</th>
                                    <th class="text-white fw-bold"><i class="link-icon feather-16" data-feather="user"></i>@_CommonLocalizer["FullName"]</th>
                                    <th class="text-white fw-bold"><i class="link-icon feather-16" data-feather="truck"></i>@_CommonLocalizer["Mobile"]</th>
                                    <th class="text-white fw-bold"><i class="link-icon feather-16" data-feather="edit"></i>@_CommonLocalizer["Email"]</th>
                                    <th class="text-white fw-bold"><i class="link-icon feather-16" data-feather="edit"></i>@_CommonLocalizer["Status"]</th>
                                    <th class="text-white fw-bold"><i class="link-icon feather-16" data-feather="check"></i>@_CommonLocalizer["Price/Post"]</th>
                                    <th class="text-white fw-bold"><i class="link-icon feather-16" data-feather="edit"></i> @_CommonLocalizer["Price/Event"]</th>
                                    <th class="text-white fw-bold"><i class="link-icon feather-16" data-feather="edit"></i>@_CommonLocalizer["Price/Delivery"]</th>
                                   
                                </tr>
                            </thead>
                      
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>


@section Styles {
    <style>
        table.dataTable td {
            word-break: break-word;
            white-space: normal;
        }
    </style>
}
@section Scripts {

    <script>
        $(document).ready(function () {
            $("#filter").on("click", function () {
                event.preventDefault();
                table.draw();
            })

        });
        var table = $("#celebrityLocationTable").DataTable({
            "processing": true,
            "serverSide": true,
            "filter": false,
            "ordering":false,
            "ajax": {
                "url": "/Celebrity/GetFilteredCelebrity",
                "type": "POST",
                "datatype": "json",
                "data": function (d) {
                    d.Search = $('#Search').val();
                }
            },
            "columns": [
                {
                    className: 'dt-control',
                    orderable: false,
                    data: null,
                    defaultContent: ''
                },
                { 
                    "render": function (data, type, row, meta) {
                        const url = row.ProfileImageURL ? row.ProfileImageURL : "/images/others/placeholder.jpg";
                       return `<div class="d-flex align-items-center">
                          <img class="img-lg rounded-circle" src = "${url}" alt = "Profile Image" id = "profileImage" >
                                </div>`
                    }
                },
                { "data": "FullName", "name": "FullName", "autoWidth": true },
                { 
                "render" : function(data,type,row,meta){
                    return `(${row.DialCode}) ${row.MobileNumber}`
                }
                },
                { "data": "Email", "name": "Email", "autoWidth": true },
                { "data": "Status", "name": "Status", "autoWidth": true },
                { "data": "PricePerAd", "name": "PricePerAd", "autoWidth": true },
                { "data": "PricePerEvent", "name": "PricePerEvent", "autoWidth": true },
                { "data": "PricePerDelivery", "name": "PricePerDelivery", "autoWidth": true }
            ]
        });


        table.on('click', 'td.dt-control', function (e) {
            let tr = e.target.closest('tr');
            let row = table.row(tr);
            console.log(row.child.isShown())
            if (row.child.isShown()) {
                // This row is already open - close it
                destroyChild(row);
            }
            else {
                createChild(row);
            }
        });

        function createChild(row) {
            var table = $(`<table style="font-size:12px" class="datatables-products table">
                                                                <thead class="border-top bg-secondary">
                                                            <tr>
                                                                <th style="font-size:12px !important;color:white !important">Address</th>
                                                                <th style="font-size:12px !important;color:white !important">Longitude</th>
                                                                <th style="font-size:12px !important;color:white !important">Latitude</th>
                                                                <th style="font-size:12px !important;color:white !important">Area</th>
                                                                <th style="font-size:12px !important;color:white !important">Block</th>
                                                                <th style="font-size:12px !important;color:white !important">Street</th>
                                                                <th style="font-size:12px !important;color:white !important">Action</th>
                                                            </tr>
                                                        </thead>
                                                    </table>
                                            `);

            // Display it the child row
            row.child(table).show();
            const celebrityId = row.data().Id;
            // Initialise as a DataTable
            var courseTable = table.DataTable({
                "processing": true,
                "serverSide": true,
                "filter": false,
                "ordering": false,
                "bLengthChange": false,
                "sorting": false,
                "ajax": {
                    "url": "/CelebrityLocation/GetLocationByCelebrityId?celebrityId=" + celebrityId,
                    "type": "Get"
                },
                "columns": [
                    { "data": "FullAddress", "name": "FullAddress", "autoWidth": true },
                    { "data": "Longitude", "name": "Longitude", "autoWidth": true },
                    { "data": "Latitude", "name": "Latitude", "autoWidth": true },
                    { "data": "Area", "name": "Area", "autoWidth": true },
                    { "data": "Block", "name": "Block", "autoWidth": true },
                    { "data": "Street", "name": "Street", "autoWidth": true },
                   
                    {
                        "render": function (data, type, row, meta) {
                            let returnValue = `<span class="text-nowrap"><a class="btn btn-sm btn-icon me-2 text-info" title="Edit" href="/CelebrityLocation/Edit?id=${row.Id}"><i class="fa fa-edit"></i></a></span>`;
                            
                            return returnValue;
                        }
                    }

                ]
            });
        }

        function destroyChild(row) {
            var table = $("table", row.child());
            table.detach();
            table.DataTable().destroy();
            row.child.hide();
        }

    </script>
  
}
