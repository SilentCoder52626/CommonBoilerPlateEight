<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdTypeQuestion" xml:space="preserve">
    <value>Ad Type Question</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Approved" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="Approve" xml:space="preserve">
    <value>Approve</value>
  </data>
  <data name="Reject" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="ApprovedBy" xml:space="preserve">
    <value>ApprovedBy</value>
  </data>
  <data name="CreatedBy" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="RejectedBy" xml:space="preserve">
    <value>RejectedBy</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Celebrity" xml:space="preserve">
    <value>Celebrity</value>
  </data>
  <data name="CelebrityDetails" xml:space="preserve">
    <value>Celebrity Details</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="CelebrityLocation" xml:space="preserve">
    <value>Celebrity Location</value>
  </data>
  <data name="CelebritySchedule" xml:space="preserve">
    <value>Celebrity Schedule</value>
  </data>
  <data name="CelebrityType" xml:space="preserve">
    <value>Celebrity Type</value>
  </data>
  <data name="CompanyType" xml:space="preserve">
    <value>Company Type</value>
  </data>
  <data name="CoreStyle" xml:space="preserve">
    <value>style</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="Dir" xml:space="preserve">
    <value>ltr</value>
  </data>
  <data name="EmailSetting" xml:space="preserve">
    <value>Email Setting</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="LanguageCode" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="LanguageFlag" xml:space="preserve">
    <value>us</value>
  </data>
  <data name="Pending" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="Rejected" xml:space="preserve">
    <value>Rejected</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="TimeToCall" xml:space="preserve">
    <value>Time To Call</value>
  </data>
  <data name="Price/Post" xml:space="preserve">
    <value>Price/Per Post</value>
  </data>
  <data name="Price/Event" xml:space="preserve">
    <value>Price/Per Event</value>
  </data>
  <data name="Price/Delivery" xml:space="preserve">
    <value>Price/Per Delivery</value>
  </data>
  <data name="PriceRange" xml:space="preserve">
    <value>Price Range</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="BD" xml:space="preserve">
    <value>Basic Details</value>
  </data>
  <data name="Socials" xml:space="preserve">
    <value>Social Links</value>
  </data>
  <data name="Attachments" xml:space="preserve">
    <value>Attachments</value>
  </data>
  <data name="FbLink" xml:space="preserve">
    <value>Facebook Link</value>
  </data>
  <data name="InstLink" xml:space="preserve">
    <value>Instagram Link</value>
  </data>
  <data name="SCLink" xml:space="preserve">
    <value>SnapChat Link</value>
  </data>
  <data name="TwitLink" xml:space="preserve">
    <value>Twitter Link</value>
  </data>
  <data name="ThreadsLink" xml:space="preserve">
    <value>Threads Link</value>
  </data>
  <data name="YTLink" xml:space="preserve">
    <value>YouTube Link</value>
  </data>
  <data name="CivId" xml:space="preserve">
    <value>Civil Id</value>
  </data>
  <data name="Contract" xml:space="preserve">
    <value>Contract Paper</value>
  </data>
  <data name="SaveBtn" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="CancelBtn" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CloudVision" xml:space="preserve">
    <value>Developed By Cloud Visions</value>
  </data>
  <data name="CommonBoilerPlateEight" xml:space="preserve">
    <value>CommonBoilerPlateEight</value>
  </data>
  <data name="Copyright" xml:space="preserve">
    <value>Copyright</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="TSB" xml:space="preserve">
    <value>To Star Booker</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="FromPrice" xml:space="preserve">
    <value>From Price</value>
  </data>
  <data name="ToPrice" xml:space="preserve">
    <value>To Price</value>
  </data>
  <data name="IsActive" xml:space="preserve">
    <value>Is Active</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>LogOut</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Schedule" xml:space="preserve">
    <value>Schedule</value>
  </data>
  <data name="FromTime" xml:space="preserve">
    <value>From Time</value>
  </data>
  <data name="ToTime" xml:space="preserve">
    <value>To Time</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="InActive" xml:space="preserve">
    <value>InActive</value>
  </data>
  <data name="NoRecords" xml:space="preserve">
    <value>No Records Found</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Latitude" xml:space="preserve">
    <value>Latitude</value>
  </data>
  <data name="Longitude" xml:space="preserve">
    <value>Longitude</value>
  </data>
  <data name="Governorate" xml:space="preserve">
    <value>Governorate</value>
  </data>
  <data name="Area" xml:space="preserve">
    <value>Area</value>
  </data>
  <data name="Block" xml:space="preserve">
    <value>Block</value>
  </data>
  <data name="GooglePlusCode" xml:space="preserve">
    <value>GooglePlusCode</value>
  </data>
  <data name="Street" xml:space="preserve">
    <value>GooglePlusCode</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="DialCode" xml:space="preserve">
    <value>DialCode</value>
  </data>
  <data name="InterestedCelebrityTypes" xml:space="preserve">
    <value>Celebrity Types Interested</value>
  </data>
  <data name="Interests" xml:space="preserve">
    <value>Interests</value>
  </data>
  <data name="CustomerDetails" xml:space="preserve">
    <value>Customer Details</value>
  </data>
  <data name="Question" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="AnsType" xml:space="preserve">
    <value>Answer Type</value>
  </data>
  <data name="DelType" xml:space="preserve">
    <value>Delivery Type</value>
  </data>
  <data name="AddOpt" xml:space="preserve">
    <value>Add Option</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="HostServer" xml:space="preserve">
    <value>Host Server</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="Port" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="FromEmail" xml:space="preserve">
    <value>From Email</value>
  </data>
  <data name="FromName" xml:space="preserve">
    <value>From Name</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Old Password</value>
  </data>
  <data name="ResetPassword" xml:space="preserve">
    <value>Reset Password</value>
  </data>
  <data name="AccountLocked" xml:space="preserve">
    <value>Account Locked</value>
  </data>
  <data name="AdminMessage" xml:space="preserve">
    <value>Please contact the admin</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginMsg" xml:space="preserve">
    <value>Welcome back! Log in to your account.</value>
  </data>
  <data name="CelebrityReviews" xml:space="preserve">
    <value>Celebrity Reviews</value>
  </data>
  <data name="Ratings" xml:space="preserve">
    <value>Ratings</value>
  </data>
  <data name="ReviewText" xml:space="preserve">
    <value>ReviewText</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="Permission" xml:space="preserve">
    <value>Permission</value>
  </data>
</root>